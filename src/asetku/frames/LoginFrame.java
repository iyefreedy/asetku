/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package asetku.frames;

import asetku.databases.ConnectionManager;
import asetku.databases.UserSession;
import asetku.models.User;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author dhafa
 */
public class LoginFrame extends javax.swing.JFrame {
    Connection conn = ConnectionManager.getInstance().getConnection();
    /**
     * Creates new form LoginFrame
     */
    public LoginFrame() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(dim.width / 2 - getSize().width / 2, dim.height / 2 - getSize().height / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundJPanel1 = new asetku.palettes.BackgroundJPanel();
        jButton1 = new javax.swing.JButton();
        nipTextField = new asetku.palettes.RoundedJTextField();
        passwordTextField = new asetku.palettes.RoundedJPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backgroundJPanel1.setLayout(null);

        jButton1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        backgroundJPanel1.add(jButton1);
        jButton1.setBounds(180, 250, 108, 34);

        nipTextField.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        nipTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nipTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nipTextFieldKeyTyped(evt);
            }
        });
        backgroundJPanel1.add(nipTextField);
        nipTextField.setBounds(110, 120, 240, 34);
        backgroundJPanel1.add(passwordTextField);
        passwordTextField.setBounds(110, 200, 240, 35);

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel1.setText("Password");
        backgroundJPanel1.add(jLabel1);
        jLabel1.setBounds(110, 170, 80, 24);

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel2.setText("NIP");
        backgroundJPanel1.add(jLabel2);
        jLabel2.setBounds(110, 90, 70, 24);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backgroundJPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backgroundJPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        final String nip = nipTextField.getText();
        final String password = String.valueOf(passwordTextField.getPassword());
        
        final String query = "SELECT users.*, divisi.cabang_id\n"
                + "FROM users JOIN divisi ON users.divisi_id=divisi.id\n"
                + "WHERE users.nip=?";
        
        try {
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setInt(1, Integer.parseInt(nip));
            
            ResultSet result = stmt.executeQuery();
            if(!result.next()) {
                JOptionPane.showMessageDialog(this, "NIP not found");
                return;
            }
            String passwordCol = result.getString("password");
            System.out.println(passwordCol);
            
            System.out.println(result.toString());
            
            if(!password.equals(passwordCol)) {
                JOptionPane.showMessageDialog(this, "Password not equals");
                return;
            }
            
            setVisible(false);
            User user = new User();
            
            user.setUser(
                result.getString("id"),
                result.getString("nip"),
                result.getString("nama"),
                result.getString("role_id"),
                result.getString("cabang_id"),
                result.getString("divisi_id")
            );
            
            UserSession.setUser(user);
            
            new MainFrame().setVisible(true);
            
        } catch (SQLException e) {
            System.err.println("Error Code : " + e.getErrorCode());
            System.err.println("Message : " + e.getMessage());
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void nipTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nipTextFieldKeyPressed
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
        }
    }//GEN-LAST:event_nipTextFieldKeyPressed

    private void nipTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nipTextFieldKeyTyped
       char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_nipTextFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new LoginFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private asetku.palettes.BackgroundJPanel backgroundJPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private asetku.palettes.RoundedJTextField nipTextField;
    private asetku.palettes.RoundedJPasswordField passwordTextField;
    // End of variables declaration//GEN-END:variables
}
