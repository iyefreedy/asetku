/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package asetku.panels;

import asetku.databases.ConnectionManager;
import asetku.databases.DatabaseServices;
import asetku.databases.UserSession;
import asetku.models.Category;
import asetku.models.Divisi;
import asetku.models.Vendor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.UUID;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author freedcode
 */
public class PembelianPanel extends javax.swing.JPanel {
    Connection connection = ConnectionManager.getInstance().getConnection();
    DatabaseServices services;
    /**
     * Creates new form PembelianPanel
     */
    public PembelianPanel() {
        initComponents();
        services = new DatabaseServices(connection);
        
        initTabelPembelian();
    }
    
    private void initTabelPembelian() {
        Object[] header = new Object[]{"No.","Nama", "Keterangan", "Harga", "Tanggal Pembelian"};
        DefaultTableModel tableModel = new DefaultTableModel(null, header);
        jTable1.setModel(tableModel);
        
        String query = "SELECT * FROM pembelian_aset\n"
                + "JOIN aset ON pembelian_aset.aset_id=aset.id";
        
        try {
            PreparedStatement stmt = connection.prepareStatement(query);
            
            ResultSet resultSet = stmt.executeQuery();
            
            int i = 1;
            while(resultSet.next()) {
               String a = resultSet.getString("aset.nama_aset");
               String b = resultSet.getString("pembelian_aset.keterangan");
               String c = resultSet.getString("aset.harga_aset");
               String d = resultSet.getString("pembelian_aset.created_at");
               
               Object[] row = new Object[]{i, a, b, c, d};
               tableModel.addRow(row);
               
               i++;
            }
        } catch (SQLException e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pembelianButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        pembelianButton.setText("Tambah Data Pembelian");
        pembelianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pembelianButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pembelianButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pembelianButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pembelianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pembelianButtonActionPerformed
        JTextArea keteranganField = new JTextArea(10, 5);
        JTextField hargaField = new JTextField();
        JTextField namaField = new JTextField();
        JComboBox<Category> comboKategori = new JComboBox<>(services.getCategories());
        JComboBox<Divisi> comboDivisi = new JComboBox<>(services.getDivisions(UserSession.getCurrentUser().getBranchId()));
        JComboBox<Vendor> comboVendor = new JComboBox<>(services.getVendors());
        JComponent[] inputs = {
            new JLabel("Nama Aset"),
            namaField,
            new JLabel("Keterangan Aset"),
            keteranganField,
            new JLabel("Vendor"),
            comboVendor,
            new JLabel("Jumlah (Rp.)"),
            hargaField,
            new JLabel("Nama Akun"),
            comboKategori,
            new JLabel("Departemen"),
            comboDivisi
        };
        
        int result = JOptionPane.showConfirmDialog(this, inputs, "Tambah Aset", JOptionPane.PLAIN_MESSAGE);
        
        if(result == JOptionPane.OK_OPTION) {
            String query1 = "INSERT INTO aset (nama_aset, harga_aset, kategori_id, divisi_id, vendor_id, kode_aset, created_at, updated_at)\n"
                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            String query2 = "INSERT INTO pembelian_aset(aset_id, keterangan, created_at, updated_at) VALUES (?, ?, ?, ?)";
            
            try {
                PreparedStatement stmt1 = connection.prepareStatement(query1, Statement.RETURN_GENERATED_KEYS);
                stmt1.setString(1, namaField.getText());
                stmt1.setString(2, hargaField.getText());
                stmt1.setString(3, ((Category)comboKategori.getSelectedItem()).getId());
                stmt1.setString(4, ((Divisi)comboDivisi.getSelectedItem()).getId());
                stmt1.setString(5, ((Vendor) comboVendor.getSelectedItem()).getId());
                stmt1.setString(6, UUID.randomUUID().toString().substring(0, 8).toUpperCase());
                stmt1.setTimestamp(7, new java.sql.Timestamp(new java.util.Date().getTime()));
                stmt1.setTimestamp(8, new java.sql.Timestamp(new java.util.Date().getTime()));
                int affectedRow = stmt1.executeUpdate();
                
                if(affectedRow == 0) {
                    throw new SQLException();
                }
                
                ResultSet generatedKeys = stmt1.getGeneratedKeys();
                generatedKeys.first();
                int asetId = generatedKeys.getInt(1);
                
                
                PreparedStatement stmt2 = connection.prepareStatement(query2);
                stmt2.setInt(1, asetId);
                stmt2.setString(2, keteranganField.getText());
                stmt2.setTimestamp(3, new java.sql.Timestamp(new java.util.Date().getTime()));
                stmt2.setTimestamp(4, new java.sql.Timestamp(new java.util.Date().getTime()));
                stmt2.execute();
                
                JOptionPane.showMessageDialog(this, "Berhasil menambah aset");
                initTabelPembelian();
                
            } catch (SQLException e) {
                System.err.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_pembelianButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton pembelianButton;
    // End of variables declaration//GEN-END:variables
}
