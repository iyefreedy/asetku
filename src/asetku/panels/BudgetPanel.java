/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package asetku.panels;

import asetku.databases.ConnectionManager;
import asetku.databases.DatabaseServices;
import asetku.databases.UserSession;
import asetku.models.Divisi;
import asetku.models.User;
import asetku.utils.Utilities;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dhafa
 */
public class BudgetPanel extends javax.swing.JPanel {
    Connection connection = ConnectionManager.getInstance().getConnection();
    DatabaseServices services = null;

    /**
     * Creates new form BudgetPanel
     */
    public BudgetPanel() {
        initComponents();
        services = new DatabaseServices(connection);
        initBudgetTable();
    }
    
    private void initBudgetTable() {
        Object[] header = new Object[]{"No.", "Divisi", "Saldo Sebelum", "Penambahan", "Saldo Sesudah", "Tanggal"};
        DefaultTableModel tableModel = new DefaultTableModel(null, header);
        budgetTable.setModel(tableModel);
        
        String query = "SELECT * FROM history_budget\n"
                + "JOIN divisi ON history_budget.divisi_id=divisi.id\n"
                + "ORDER BY history_budget.created_at DESC";
        
        try {
            PreparedStatement stmt = connection.prepareStatement(query);
            ResultSet result = stmt.executeQuery();
            
            int i = 1;
            while(result.next()) {
                
                String nama = result.getString("divisi.nama");
                String a = Utilities.getFormatCurrency().format(result.getDouble("old_budget"));
                String b = Utilities.getFormatCurrency().format(result.getDouble("nominal"));
                String c = Utilities.getFormatCurrency().format(result.getDouble("new_budget"));
                String d = result.getString("created_at");
                
                Object[] row = new Object[]{i, nama, a, b, c, d};
                
                tableModel.addRow(row);
                i++;
            }
            
            
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addBudgetButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        budgetTable = new javax.swing.JTable();

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "20", "30", "40", "50" }));

        jLabel3.setText("Show");

        jLabel4.setText("Entries");

        addBudgetButton.setText("Tambah Budget");
        addBudgetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBudgetButtonActionPerformed(evt);
            }
        });

        budgetTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                budgetTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(budgetTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addBudgetButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addBudgetButton)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addBudgetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBudgetButtonActionPerformed
        User currentUser = UserSession.getCurrentUser();
        JTextField budgetField = new JTextField();
        JComboBox<Divisi> divisiComboBox = new JComboBox<>(services.getDivisions(currentUser.getBranchId()));
        JComponent[] inputs = new JComponent[]{
          new JLabel("Divisi"),
          divisiComboBox,
          new JLabel("Masukkan Budget"),
          budgetField
        };
        
        int result = JOptionPane.showConfirmDialog(this, inputs, "Masukkan Budget", JOptionPane.PLAIN_MESSAGE);
        if(result == JOptionPane.OK_OPTION) {
            Divisi divisi = (Divisi) divisiComboBox.getSelectedItem();
            String selectQuery = "SELECT * FROM divisi WHERE divisi.id=?";
            String updateQuery = "UPDATE divisi SET budget=?\n"
                    + "WHERE divisi.id=?";
            String insertQuery = "INSERT INTO history_budget(divisi_id, old_budget, nominal, new_budget, created_at)\n"
                    + "VALUES (?, ?, ?, ?, ?)";

            try {
                // Fetch data divisions
                PreparedStatement selectStmt = connection.prepareStatement(selectQuery);
                selectStmt.setString(1, divisi.getId());
                ResultSet resultSet = selectStmt.executeQuery();
                double oldBudget = 0;
                double addition = Double.parseDouble(budgetField.getText());
                while(resultSet.next()) {
                    oldBudget+= resultSet.getDouble("budget");
                }
                
                // Update statement
                PreparedStatement updateStmt = connection.prepareStatement(updateQuery);
                updateStmt.setDouble(1, oldBudget + addition);
                updateStmt.setString(2, divisi.getId());
                updateStmt.execute();
                
                // Insert statement
                PreparedStatement insertStmt = connection.prepareStatement(insertQuery);
                insertStmt.setString(1, divisi.getId());
                insertStmt.setDouble(2, oldBudget);
                insertStmt.setDouble(3, Double.parseDouble(budgetField.getText()));
                insertStmt.setDouble(4, oldBudget + addition);
                insertStmt.setTimestamp(5, new Timestamp(new java.util.Date().getTime()));
                
                insertStmt.execute();
                JOptionPane.showMessageDialog(this, "Berhasil");
                initBudgetTable();
            } catch (SQLException e) {
                System.err.println(e.getMessage());
            }
        }
            
            
    }//GEN-LAST:event_addBudgetButtonActionPerformed

    private void budgetTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_budgetTableMouseClicked

    }//GEN-LAST:event_budgetTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBudgetButton;
    private javax.swing.JTable budgetTable;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
